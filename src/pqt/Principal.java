/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pqt;

import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Gustavo A. Di Iorio
 */
public class Principal extends javax.swing.JFrame {

    static public String Codigo = "";
    static public String Encabezado = "";
    static public String Herramienta = "";
    static public String Procesos = "";
    static public String NProg = "";
    static boolean G50 = false;
    static File archivoHerr;
    static String arch;
    int guardar = 0;
    Licencia Lic = new Licencia();
    /**
     * Creates new form Principal
     */
    public Principal() throws IOException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Torno con control FANUC 0i-Mate TD");
        mnu_Guardar.setEnabled(false);
        Licencia();
        Iniciar();
        //TODO DOCUMENTAR TODO EL PROYECTO
    }

    /**
     * Verifica la licencia para poder utilizar el software
     */
    private void Licencia() {
        if (!Lic.Verificar()) {
            String lc;
            lc = JOptionPane.showInputDialog(this, "Proporcione el siguiente codigo para obtener la licencia:" + '\n' + Lic.Maquina(), "ERROR DE LICENCIA", JOptionPane.PLAIN_MESSAGE);
            if (lc.equals("")) {
                this.processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
            } else {
                PrintWriter salida = null;
                try {
                    salida = new PrintWriter(Lic.ArchivoLicencia().getAbsolutePath());
                    salida.println(lc);
                    salida.close();
                    if (!Lic.Verificar()) {
                        this.processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
                    }
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    /**
     * Inicia la interfaz y las variables
     */
    private void Iniciar() {
        Codigo = "";
        Encabezado = "";
        Herramienta = "";
        Procesos = "";
        NProg = "";
        G50 = false;
        txt_Codigo.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        dlg_Archivos = new javax.swing.JDialog();
        fc_Archivos = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_Codigo = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnu_Archivo = new javax.swing.JMenu();
        mnu_Nuevo = new javax.swing.JMenuItem();
        mnu_Guardar = new javax.swing.JMenuItem();
        mnu_Abrir = new javax.swing.JMenuItem();

        dlg_Archivos.setResizable(false);
        dlg_Archivos.setSize(new java.awt.Dimension(643, 443));

        fc_Archivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fc_ArchivosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dlg_ArchivosLayout = new javax.swing.GroupLayout(dlg_Archivos.getContentPane());
        dlg_Archivos.getContentPane().setLayout(dlg_ArchivosLayout);
        dlg_ArchivosLayout.setHorizontalGroup(
            dlg_ArchivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dlg_ArchivosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(fc_Archivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        dlg_ArchivosLayout.setVerticalGroup(
            dlg_ArchivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlg_ArchivosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fc_Archivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_Codigo.setColumns(20);
        txt_Codigo.setRows(5);
        txt_Codigo.setToolTipText("");
        jScrollPane1.setViewportView(txt_Codigo);

        mnu_Archivo.setText("Archivo");

        mnu_Nuevo.setText("Nuevo");
        mnu_Nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnu_NuevoActionPerformed(evt);
            }
        });
        mnu_Archivo.add(mnu_Nuevo);

        mnu_Guardar.setText("Guardar");
        mnu_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnu_GuardarActionPerformed(evt);
            }
        });
        mnu_Archivo.add(mnu_Guardar);

        mnu_Abrir.setText("Abrir");
        mnu_Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnu_AbrirActionPerformed(evt);
            }
        });
        mnu_Archivo.add(mnu_Abrir);

        jMenuBar1.add(mnu_Archivo);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     /**
     * Guarda y Abre los archivos generados
     *
     * @param evt
     */
    private void fc_ArchivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fc_ArchivosActionPerformed
        File archivo;
        String arr[], linea, linea2, str;
        if (evt.getActionCommand().equals("ApproveSelection")) {
            archivo = fc_Archivos.getSelectedFile();
            arr = archivo.getAbsolutePath().split(archivo.getName());
            dlg_Archivos.setVisible(false);
            if (guardar == 1) {
                try {
                    PrintWriter salida = new PrintWriter(arr[0] + "O" + NProg + ".", Charset.forName("UNICODE").name());
                    arr = txt_Codigo.getText().split(";\n");
                    str = "%\n";
                    for (int i = 0; i < arr.length; i++) {
                        if ((arr[i].contains("(")) && (arr[i].contains(")"))) {
                            String brr[], comentario, comando;
                            comentario = arr[i].substring(arr[i].indexOf("(") + 1, arr[i].indexOf(")"));
                            comentario = "(" + comentario + ")";
                            if (arr[i].length() >= (comentario.length()+1) ) {
                                comando = arr[i].substring(0, arr[i].length() - comentario.length() - 1);
                            }else{
                                comando="";
                            }
                            linea = comando.replaceAll(" ", "") + comentario;
                        } else {
                            linea = arr[i].replaceAll(" ", "");
                        }
                        str = str + linea + " \n";
//                        linea = arr[i].replaceAll(" ", "");
//                        linea2 = linea.replaceAll("_", " ");
//                        str = str + linea2 + " \n";
                    }
                    str = str + "M5 \n" + "M30\n" + "%";
                    salida.print(str);
                    salida.close();
                    arr = archivo.getAbsolutePath().split(archivo.getName());
                    salida = new PrintWriter(arr[0] + "O" + NProg + ".txt");
                    arr = txt_Codigo.getText().split("\n");
                    str = "%\n";
                    for (int i = 0; i < arr.length; i++) {
//                        linea = arr[i].replaceAll("_", " ");
//                        str = str + linea + " \n";
                        str = str + arr[i] + " \n";
                    }
                    str = str + "M5;\n" + "M30;\n" + "%";
                    salida.print(str);
                    salida.close();
                } catch (FileNotFoundException | UnsupportedEncodingException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (guardar == 2) {
                FileReader abrir = null;
                BufferedReader miBuffer = null;
                try {
                    abrir = new FileReader(archivo.getAbsolutePath());
                    miBuffer = new BufferedReader(abrir);
                    linea = miBuffer.readLine();
                    linea = miBuffer.readLine();
                    str = "";
                    while (!linea.equals("M30;")) {
                        str = str + linea + '\n';
                        linea = miBuffer.readLine();
                    }
                    str = str.substring(0, str.length() - 4);
                    txt_Codigo.setText(str);
                    mnu_Guardar.setEnabled(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            guardar = 0;
        }
    }//GEN-LAST:event_fc_ArchivosActionPerformed

    private void mnu_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnu_GuardarActionPerformed
        guardar = 1;
        fc_Archivos.setDialogType(JFileChooser.SAVE_DIALOG);
        fc_Archivos.setFileFilter(new FileNameExtensionFilter("Archivo", "."));
        fc_Archivos.setSelectedFile(new File("O" + NProg));
        dlg_Archivos.setTitle("Crear programa");
        dlg_Archivos.setModal(true);
        dlg_Archivos.setVisible(true);
    }//GEN-LAST:event_mnu_GuardarActionPerformed
    /**
     * Genera un nuevo archivo
     *
     * @param evt
     */
    private void mnu_NuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnu_NuevoActionPerformed
        try {
            if (!txt_Codigo.getText().equals("")) {
                int jop = JOptionPane.showConfirmDialog(this, "¿Desea guardar el programa actual?", "GUARDAR PROGRAMA", JOptionPane.YES_NO_OPTION);
                if (jop == 0) {
                    fc_Archivos.setDialogType(JFileChooser.SAVE_DIALOG);
                    fc_Archivos.setFileFilter(new FileNameExtensionFilter("Archivo", "."));
                    fc_Archivos.setSelectedFile(new File("O" + NProg));
                    dlg_Archivos.setTitle("Crear programa");
                    dlg_Archivos.setModal(true);
                    dlg_Archivos.setVisible(true);
                }
            }
            Iniciar();
            new Inicial(this, true).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        Codigo = Encabezado + Herramienta;
        txt_Codigo.setText(Codigo);
        mnu_Guardar.setEnabled(true);
    }//GEN-LAST:event_mnu_NuevoActionPerformed

    private void mnu_AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnu_AbrirActionPerformed
        guardar = 2;
        fc_Archivos.setDialogType(JFileChooser.OPEN_DIALOG);
        fc_Archivos.setFileFilter(new FileNameExtensionFilter("Texto", "txt"));
        dlg_Archivos.setTitle("Abrir programa");
        dlg_Archivos.setModal(true);
        dlg_Archivos.setVisible(true);
    }//GEN-LAST:event_mnu_AbrirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new Principal().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JDialog dlg_Archivos;
    private javax.swing.JFileChooser fc_Archivos;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem mnu_Abrir;
    private javax.swing.JMenu mnu_Archivo;
    private javax.swing.JMenuItem mnu_Guardar;
    private javax.swing.JMenuItem mnu_Nuevo;
    private javax.swing.JTextArea txt_Codigo;
    // End of variables declaration//GEN-END:variables
}
